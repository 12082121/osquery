load("//tools/build_defs/oss/osquery:cxx.bzl", "osquery_cxx_library")
load("//tools/build_defs/oss/osquery:native.bzl", "osquery_target")
load("//tools/build_defs/oss/osquery:third_party.bzl", "osquery_tp_target")
load("//tools/build_defs/oss/osquery:platforms.bzl", "FREEBSD")

common_deps = [
    osquery_tp_target("glog"),
    osquery_tp_target("gflags"),
    osquery_target("osquery/core:core"),
    osquery_target("osquery/registry:registry"),
    osquery_target("osquery/core/plugins:plugins"),
    osquery_target("osquery/database:database"),
]

osquery_cxx_library(
    name = "aws_firehose",
    srcs = [
        "aws_firehose.cpp",
    ],
    header_namespace = "osquery/logger/plugins",
    exported_headers = [
        "aws_firehose.h",
    ],
    exported_post_platform_linker_flags = [
        (
            FREEBSD,
            [
                "-lgflags",
                "-lglog",
            ],
        ),
    ],
    link_whole = True,
    visibility = ["PUBLIC"],
    deps = [
        osquery_target("osquery/dispatcher:dispatcher"),
        ":aws_log_forwarder",
    ],
)

osquery_cxx_library(
    name = "aws_kinesis",
    srcs = [
        "aws_kinesis.cpp",
    ],
    header_namespace = "osquery/logger/plugins",
    exported_headers = [
        "aws_kinesis.h",
    ],
    exported_post_platform_linker_flags = [
        (
            FREEBSD,
            [
                "-lgflags",
                "-lglog",
            ],
        ),
    ],
    link_whole = True,
    visibility = ["PUBLIC"],
    deps = [
        osquery_target("osquery/dispatcher:dispatcher"),
        ":aws_log_forwarder",
    ],
)

osquery_cxx_library(
    name = "aws_log_forwarder",
    header_namespace = "osquery/logger/plugins",
    exported_headers = [
        "aws_log_forwarder.h",
    ],
    exported_post_platform_linker_flags = [
        (
            FREEBSD,
            [
                "-lgflags",
                "-lglog",
            ],
        ),
    ],
    link_whole = True,
    visibility = ["PUBLIC"],
    deps = [
        osquery_target("osquery/utils/aws:aws"),
        ":buffered",
    ],
)

osquery_cxx_library(
    name = "buffered",
    srcs = [
        "buffered.cpp",
    ],
    header_namespace = "osquery/logger/plugins",
    exported_headers = [
        "buffered.h",
    ],
    exported_post_platform_linker_flags = [
        (
            FREEBSD,
            [
                "-lgflags",
                "-lglog",
            ],
        ),
    ],
    link_whole = True,
    visibility = ["PUBLIC"],
    deps = common_deps + [
        osquery_target("osquery/utils/json:json"),
        osquery_target("osquery/config/parsers:parsers"),
        osquery_target("osquery/utils/system:time"),
        osquery_target("osquery/utils:utils"),
    ],
)

osquery_cxx_library(
    name = "filesystem",
    srcs = [
        "filesystem_logger.cpp",
    ],
    header_namespace = "osquery/logger/plugins",
    exported_headers = [
        "filesystem_logger.h",
    ],
    exported_post_platform_linker_flags = [
        (
            FREEBSD,
            [
                "-lgflags",
                "-lglog",
            ],
        ),
    ],
    link_whole = True,
    visibility = ["PUBLIC"],
    deps = common_deps + [
        osquery_target("osquery/utils/config:config"),
        osquery_target("osquery/filesystem:filesystem"),
    ],
)

osquery_cxx_library(
    name = "kafka_producer",
    srcs = [
        "kafka_producer.cpp",
    ],
    header_namespace = "osquery/logger/plugins",
    exported_headers = [
        "kafka_producer.h",
    ],
    exported_post_platform_linker_flags = [
        (
            FREEBSD,
            [
                "-lgflags",
                "-lglog",
            ],
        ),
    ],
    link_whole = True,
    visibility = ["PUBLIC"],
    deps = common_deps + [
        osquery_target("osquery/dispatcher:dispatcher"),
        osquery_target("osquery/utils/config:config"),
        osquery_tp_target("librdkafka"),
    ],
)

osquery_cxx_library(
    name = "stdout",
    srcs = [
        "stdout.cpp",
    ],
    header_namespace = "osquery/logger/plugins",
    exported_headers = [
        "stdout.h",
    ],
    exported_post_platform_linker_flags = [
        (
            FREEBSD,
            [
                "-lgflags",
                "-lglog",
            ],
        ),
    ],
    link_whole = True,
    visibility = ["PUBLIC"],
    deps = common_deps,
)

osquery_cxx_library(
    name = "syslog",
    srcs = [
        "syslog_logger.cpp",
    ],
    header_namespace = "osquery/logger/plugins",
    exported_headers = [
        "syslog_logger.h",
    ],
    exported_post_platform_linker_flags = [
        (
            FREEBSD,
            [
                "-lgflags",
                "-lglog",
            ],
        ),
    ],
    link_whole = True,
    visibility = ["PUBLIC"],
    deps = common_deps,
)

osquery_cxx_library(
    name = "tls_logger",
    srcs = [
        "tls_logger.cpp",
    ],
    header_namespace = "osquery/logger/plugins",
    exported_headers = [
        "tls_logger.h",
    ],
    exported_post_platform_linker_flags = [
        (
            FREEBSD,
            [
                "-lgflags",
                "-lglog",
            ],
        ),
    ],
    link_whole = True,
    visibility = ["PUBLIC"],
    deps = common_deps + [
        ":buffered",
        osquery_target("osquery/remote/serializers:json"),
        osquery_target("osquery/remote:utility"),
        osquery_target("osquery/config/parsers:parsers"),
        osquery_target("osquery/dispatcher:dispatcher"),
    ],
)

osquery_cxx_library(
    name = "windows_event_log",
    srcs = [
        "windows_event_log.cpp",
    ],
    header_namespace = "osquery/logger/plugins",
    exported_headers = [
        "generated_wel.h",
        "windows_event_log.h",
    ],
    exported_post_platform_linker_flags = [
        (
            FREEBSD,
            [
                "-lgflags",
                "-lglog",
            ],
        ),
    ],
    link_whole = True,
    visibility = ["PUBLIC"],
    deps = common_deps,
)
