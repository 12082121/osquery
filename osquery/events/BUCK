load("//tools/build_defs/oss/osquery:cxx.bzl", "osquery_cxx_library")
load("//tools/build_defs/oss/osquery:native.bzl", "osquery_target")
load("//tools/build_defs/oss/osquery:platforms.bzl", "LINUX", "MACOSX")
load("//tools/build_defs/oss/osquery:third_party.bzl", "osquery_tp_target")

osquery_cxx_library(
    name = "events",
    srcs = [
        "events.cpp",
    ],
    header_namespace = "osquery/events",
    exported_headers = [
        "pathset.h",
    ],
    exported_platform_headers = [
        (
            LINUX,
            [
                "linux/auditdnetlink.h",
                "linux/auditeventpublisher.h",
                "linux/inotify.h",
                "linux/process_events.h",
                "linux/process_file_events.h",
                "linux/selinux_events.h",
                "linux/socket_events.h",
                "linux/syslog.h",
                "linux/udev.h",
            ],
        ),
        (
            MACOSX,
            [
                "darwin/diskarbitration.h",
                "darwin/event_taps.h",
                "darwin/fsevents.h",
                "darwin/iokit.h",
                "darwin/openbsm.h",
                "darwin/scnetwork.h",
            ],
        ),
    ],
    link_whole = True,
    platform_deps = [
        (
            LINUX,
            [
                osquery_tp_target("libaudit"),
                osquery_tp_target("libudev"),
                osquery_tp_target("util-linux"),
            ],
        ),
    ],
    platform_srcs = [
        (
            LINUX,
            [
                "linux/auditdnetlink.cpp",
                "linux/auditeventpublisher.cpp",
                "linux/inotify.cpp",
                "linux/syslog.cpp",
                "linux/udev.cpp",
            ],
        ),
        (
            MACOSX,
            [
                "darwin/diskarbitration.cpp",
                "darwin/event_taps.cpp",
                "darwin/fsevents.cpp",
                "darwin/iokit.cpp",
                "darwin/openbsm.cpp",
                "darwin/scnetwork.cpp",
            ],
        ),
    ],
    visibility = ["PUBLIC"],
    deps = [
        osquery_target("osquery:headers"),
        osquery_target("osquery/config:config"),
        osquery_target("osquery/hashing:hashing"),
        osquery_target("osquery/utils/conversions:conversions"),
        osquery_target("osquery/utils/expected:expected"),
        osquery_target("osquery/utils/system:time"),
        osquery_tp_target("boost"),
    ],
)
